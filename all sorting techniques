#bubble sort
# nums = [9, 8, 7, 6, 5, 4, 3, 2, 1]
# print("before bubble sort",nums)
# def bubblesort(nums):
#     n = len(nums)
#     fixThePosition = n - 1

#     while fixThePosition > 0:
#         for i in range(0 , fixThePosition):
#             if nums[i] > nums[i+1]:
#                 nums[i],nums[i+1] = nums[i+1],nums[i]
        
#         fixThePosition -= 1
#     return nums

# print("after bubble sort",bubblesort(nums))

#Selection sort
# def selectionsort(nums):
#     n = len(nums)
#     FixThePosition = n - 1

#     while FixThePosition > 0:
#         maxEleIndex = FixThePosition
#         for i in range(0,FixThePosition - 1):
#             if nums[maxEleIndex] < nums[i]:
#                 maxEleIndex = i
#         if maxEleIndex != FixThePosition:
#             temp = nums[maxEleIndex]
#             nums[maxEleIndex] = nums[FixThePosition]
#             nums[FixThePosition] = temp
#         FixThePosition -= 1
#     print(nums)
        
# nums = [9, 8, 7, 6, 5, 4, 3, 2, 1]
# print(selectionsort(nums))


# def insertionsort(nums):
#     n= len(nums)
#     lastEleIndex = 0
#     for firEle in range(1, n):
#         temp = nums[firEle]
#         prevIndex = firEle - 1
#         while prevIndex >= 0:
#             if nums[prevIndex] > temp:
#                 nums[prevIndex + 1] = nums[prevIndex]
#             else :
#                 break
#             prevIndex -= 1
#         nums[prevIndex + 1] = temp



# nums = [9, 8, 7, 6, 5, 4, 3, 2, 1]
# insertionsort(nums)
# print(nums)

def mergeIt(nums, left, mid, right):
    
    temp = []
    index1 = left 
    index2 = mid + 1 
 
    while index1 <= mid and index2 <= right:
        if nums[index1] < nums[index2]:
            temp.append(nums[index1])
            index1 += 1 
        else:
            temp.append(nums[index2])
            index2 += 1 
 
    while index1 <= mid:
        temp.append(nums[index1])
        index1 += 1 
 
    while index2 <= mid:
        temp.append(nums[index2])
        index2 += 1 
 
 
    index = left 
    for ele in temp:
        nums[index] = ele 
        index += 1
 
 
 
 
 
def divideAndMerge(nums, left, right):
    if left >= right:
        return
 
    mid = (left + right) // 2 
    divideAndMerge(nums, left, mid)
    divideAndMerge(nums, mid + 1, right)
    mergeIt(nums, left, mid, right)
 
 
def performMergeSort(nums):
    n = len(nums)
    divideAndMerge(nums, 0, n - 1)
 
nums = [9, 8, 7, 6, 5, 4, 3, 2, 1]
print("Before sorting:", nums)
 
performMergeSort(nums)
 
print("After sorting:", nums)
